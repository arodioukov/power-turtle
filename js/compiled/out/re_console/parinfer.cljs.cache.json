["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ ","~$join","~$clojure.string"],"~:excludes",["~#set",[]],"~:name","~$re-console.parinfer","~:imports",null,"~:requires",["^ ","^4","^4","~$re-frame.core","^;","~$indent-mode","~$parinfer.indent-mode","^=","^=","~$paren-mode","~$parinfer.paren-mode","^?","^?","~$common","~$re-console.common","^A","^A"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$subscribe","^;","^3","^4","~$dispatch-sync","^;","~$dispatch","^;"],"~:defs",["^ ","~$update-cursor-fn",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/timothy/git/power-turtle/resources/public/js/compiled/out/re_console/parinfer.cljs","~:line",11,"~:column",7,"~:end-line",11,"~:end-column",23,"~:arglists",["~#list",["~$quote",["^Q",[["~$console-key"]]]]],"~:doc","Correctly position cursor after text that was just typed.\n  We need this since reformatting the text can shift things forward past our cursor."],"^7","~$re-console.parinfer/update-cursor-fn","~:variadic",false,"^K","resources/public/js/compiled/out/re_console/parinfer.cljs","^O",23,"~:method-params",["^Q",[["^S"]]],"~:protocol-impl",null,"~:arglists-meta",["^Q",[null,null]],"^M",1,"^L",11,"^N",11,"~:max-fixed-arity",1,"~:fn-var",true,"^P",["^Q",["^R",["^Q",[["^S"]]]]],"^T","Correctly position cursor after text that was just typed.\n  We need this since reformatting the text can shift things forward past our cursor."],"~$compute-cursor-dx",["^ ","^I",null,"^J",["^ ","^K","/home/timothy/git/power-turtle/resources/public/js/compiled/out/re_console/parinfer.cljs","^L",47,"^M",7,"^N",47,"^O",24,"^P",["^Q",["^R",["^Q",[["~$cursor","~$change"]]]]]],"^7","~$re-console.parinfer/compute-cursor-dx","^V",false,"^K","resources/public/js/compiled/out/re_console/parinfer.cljs","^O",24,"^W",["^Q",[["^11","^12"]]],"^X",null,"^Y",["^Q",[null,null]],"^M",1,"^L",47,"^N",47,"^Z",2,"^[",true,"^P",["^Q",["^R",["^Q",[["^11","^12"]]]]]],"~$compute-cm-change",["^ ","^I",null,"^J",["^ ","^K","/home/timothy/git/power-turtle/resources/public/js/compiled/out/re_console/parinfer.cljs","^L",65,"^M",7,"^N",65,"^O",24,"^P",["^Q",["^R",["^Q",[["~$cm","^12","~$options","~$prev-state"]]]]]],"^7","~$re-console.parinfer/compute-cm-change","^V",false,"^K","resources/public/js/compiled/out/re_console/parinfer.cljs","^O",24,"^W",["^Q",[["^15","^12","^16","^17"]]],"^X",null,"^Y",["^Q",[null,null]],"^M",1,"^L",65,"^N",65,"^Z",4,"^[",true,"^P",["^Q",["^R",["^Q",[["^15","^12","^16","^17"]]]]]],"~$fix-text-fn",["^ ","^I",null,"^J",["^ ","^K","/home/timothy/git/power-turtle/resources/public/js/compiled/out/re_console/parinfer.cljs","^L",84,"^M",7,"^N",84,"^O",18,"^P",["^Q",["^R",["^Q",[["^S"]]]]],"^T","Correctly format the text from the given editor."],"^7","~$re-console.parinfer/fix-text-fn","^V",false,"^K","resources/public/js/compiled/out/re_console/parinfer.cljs","^O",18,"^W",["^Q",[["^S"]]],"^X",null,"^Y",["^Q",[null,null]],"^M",1,"^L",84,"^N",84,"^Z",1,"^[",true,"^P",["^Q",["^R",["^Q",[["^S"]]]]],"^T","Correctly format the text from the given editor."],"~$before-change",["^ ","^I",null,"^J",["^ ","^K","/home/timothy/git/power-turtle/resources/public/js/compiled/out/re_console/parinfer.cljs","^L",136,"^M",7,"^N",136,"^O",20,"^P",["^Q",["^R",["^Q",[["^15","^12"]]]]],"^T","Called before any change is applied to the editor."],"^7","~$re-console.parinfer/before-change","^V",false,"^K","resources/public/js/compiled/out/re_console/parinfer.cljs","^O",20,"^W",["^Q",[["^15","^12"]]],"^X",null,"^Y",["^Q",[null,null]],"^M",1,"^L",136,"^N",136,"^Z",2,"^[",true,"^P",["^Q",["^R",["^Q",[["^15","^12"]]]]],"^T","Called before any change is applied to the editor."],"~$on-change",["^ ","^I",null,"^J",["^ ","^K","/home/timothy/git/power-turtle/resources/public/js/compiled/out/re_console/parinfer.cljs","^L",145,"^M",7,"^N",145,"^O",16,"^P",["^Q",["^R",["^Q",[["^S"]]]]],"^T","Called after any change is applied to the editor."],"^7","~$re-console.parinfer/on-change","^V",false,"^K","resources/public/js/compiled/out/re_console/parinfer.cljs","^O",16,"^W",["^Q",[["^S"]]],"^X",null,"^Y",["^Q",[null,null]],"^M",1,"^L",145,"^N",145,"^Z",1,"^[",true,"^P",["^Q",["^R",["^Q",[["^S"]]]]],"^T","Called after any change is applied to the editor."],"~$on-cursor-activity",["^ ","^I",null,"^J",["^ ","^K","/home/timothy/git/power-turtle/resources/public/js/compiled/out/re_console/parinfer.cljs","^L",164,"^M",7,"^N",164,"^O",25,"^P",["^Q",["^R",["^Q",[["^S"]]]]],"^T","Called after the cursor moves in the editor."],"^7","~$re-console.parinfer/on-cursor-activity","^V",false,"^K","resources/public/js/compiled/out/re_console/parinfer.cljs","^O",25,"^W",["^Q",[["^S"]]],"^X",null,"^Y",["^Q",[null,null]],"^M",1,"^L",164,"^N",164,"^Z",1,"^[",true,"^P",["^Q",["^R",["^Q",[["^S"]]]]],"^T","Called after the cursor moves in the editor."],"~$parinferize!",["^ ","^I",null,"^J",["^ ","^K","/home/timothy/git/power-turtle/resources/public/js/compiled/out/re_console/parinfer.cljs","^L",182,"^M",7,"^N",182,"^O",19,"^P",["^Q",["^R",["^Q",[["^15","^S"]]]]],"^T","Add parinfer goodness to a codemirror editor"],"^7","~$re-console.parinfer/parinferize!","^V",false,"^K","resources/public/js/compiled/out/re_console/parinfer.cljs","^O",19,"^W",["^Q",[["^15","^S"]]],"^X",null,"^Y",["^Q",[null,null]],"^M",1,"^L",182,"^N",182,"^Z",2,"^[",true,"^P",["^Q",["^R",["^Q",[["^15","^S"]]]]],"^T","Add parinfer goodness to a codemirror editor"]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:get-console","~:set-console-frame-updated","~:get-console-mode","~:cursor-line","~:start-line","~:valid?","~:else","~:num-new-lines","~:cursor-x","~:get-prompt","~:state","~:cursor-dx","~:get-console-frame-updated","~:get-console-on-before-change","~:get-console-on-after-change","~:console-set-text","~:line-no","^N","~:new-line","~:change","~:none","~:use-cache?","~:text","~:get-console-eval-opts"]],"~:order",["^1G","^1M","^1K","^N","^1N","^1J","^1W","^1X","^1I","^21","^1Y","^1[","^1O","^1R","^1L","^1Q","^20","^1V","^1P","^1T","^1U","^1Z","^1H","^1S"]],"^T","Glues Parinfer's formatter to a CodeMirror editor"]